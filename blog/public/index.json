[{"content":"Markdown: Syntax  Overview  Philosophy Inline HTML Automatic Escaping for Special Characters   Block Elements  Paragraphs and Line Breaks Headers Blockquotes Lists Code Blocks Horizontal Rules   Span Elements  Links Emphasis Code Images   Miscellaneous  Backslash Escapes Automatic Links    Note: This document is itself written using Markdown; you can see the source for it by adding \u0026lsquo;.text\u0026rsquo; to the URL.\n Overview Philosophy Markdown is intended to be as easy-to-read and easy-to-write as is feasible.\nReadability, however, is emphasized above all else. A Markdown-formatted document should be publishable as-is, as plain text, without looking like it\u0026rsquo;s been marked up with tags or formatting instructions. While Markdown\u0026rsquo;s syntax has been influenced by several existing text-to-HTML filters \u0026ndash; including Setext, atx, Textile, reStructuredText, Grutatext, and EtText \u0026ndash; the single biggest source of inspiration for Markdown\u0026rsquo;s syntax is the format of plain text email.\nBlock Elements Paragraphs and Line Breaks A paragraph is simply one or more consecutive lines of text, separated by one or more blank lines. (A blank line is any line that looks like a blank line \u0026ndash; a line containing nothing but spaces or tabs is considered blank.) Normal paragraphs should not be indented with spaces or tabs.\nThe implication of the \u0026ldquo;one or more consecutive lines of text\u0026rdquo; rule is that Markdown supports \u0026ldquo;hard-wrapped\u0026rdquo; text paragraphs. This differs significantly from most other text-to-HTML formatters (including Movable Type\u0026rsquo;s \u0026ldquo;Convert Line Breaks\u0026rdquo; option) which translate every line break character in a paragraph into a \u0026lt;br /\u0026gt; tag.\nWhen you do want to insert a \u0026lt;br /\u0026gt; break tag using Markdown, you end a line with two or more spaces, then type return.\nHeaders Markdown supports two styles of headers, [Setext] [1] and [atx] [2].\nOptionally, you may \u0026ldquo;close\u0026rdquo; atx-style headers. This is purely cosmetic \u0026ndash; you can use this if you think it looks better. The closing hashes don\u0026rsquo;t even need to match the number of hashes used to open the header. (The number of opening hashes determines the header level.)\nBlockquotes Markdown uses email-style \u0026gt; characters for blockquoting. If you\u0026rsquo;re familiar with quoting passages of text in an email message, then you know how to create a blockquote in Markdown. It looks best if you hard wrap the text and put a \u0026gt; before every line:\n This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.\nDonec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse id sem consectetuer libero luctus adipiscing.\n Markdown allows you to be lazy and only put the \u0026gt; before the first line of a hard-wrapped paragraph:\n This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.\n  Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse id sem consectetuer libero luctus adipiscing.\n Blockquotes can be nested (i.e. a blockquote-in-a-blockquote) by adding additional levels of \u0026gt;:\n This is the first level of quoting.\n This is nested blockquote.\n Back to the first level.\n Blockquotes can contain other Markdown elements, including headers, lists, and code blocks:\n This is a header.  This is the first list item. This is the second list item.  Here\u0026rsquo;s some example code:\nreturn shell_exec(\u0026quot;echo $input | $markdown_script\u0026quot;);   Any decent text editor should make email-style quoting easy. For example, with BBEdit, you can make a selection and choose Increase Quote Level from the Text menu.\nLists Markdown supports ordered (numbered) and unordered (bulleted) lists.\nUnordered lists use asterisks, pluses, and hyphens \u0026ndash; interchangably \u0026ndash; as list markers:\n Red Green Blue  is equivalent to:\n Red Green Blue  and:\n Red Green Blue  Ordered lists use numbers followed by periods:\n Bird McHale Parish  It\u0026rsquo;s important to note that the actual numbers you use to mark the list have no effect on the HTML output Markdown produces. The HTML Markdown produces from the above list is:\nIf you instead wrote the list in Markdown like this:\n Bird McHale Parish  or even:\nBird McHale Parish  you\u0026rsquo;d get the exact same HTML output. The point is, if you want to, you can use ordinal numbers in your ordered Markdown lists, so that the numbers in your source match the numbers in your published HTML. But if you want to be lazy, you don\u0026rsquo;t have to.\nTo make lists look nice, you can wrap items with hanging indents:\n Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus. Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse id sem consectetuer libero luctus adipiscing.  But if you want to be lazy, you don\u0026rsquo;t have to:\n Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus. Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse id sem consectetuer libero luctus adipiscing.  List items may consist of multiple paragraphs. Each subsequent paragraph in a list item must be indented by either 4 spaces or one tab:\n  This is a list item with two paragraphs. Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.\nVestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus. Donec sit amet nisl. Aliquam semper ipsum sit amet velit.\n  Suspendisse id sem consectetuer libero luctus adipiscing.\n  It looks nice if you indent every line of the subsequent paragraphs, but here again, Markdown will allow you to be lazy:\n  This is a list item with two paragraphs.\nThis is the second paragraph in the list item. You\u0026rsquo;re only required to indent the first line. Lorem ipsum dolor sit amet, consectetuer adipiscing elit.\n  Another item in the same list.\n  To put a blockquote within a list item, the blockquote\u0026rsquo;s \u0026gt; delimiters need to be indented:\n  A list item with a blockquote:\n This is a blockquote inside a list item.\n   To put a code block within a list item, the code block needs to be indented twice \u0026ndash; 8 spaces or two tabs:\n  A list item with a code block:\n\u0026lt;code goes here\u0026gt;    Code Blocks Pre-formatted code blocks are used for writing about programming or markup source code. Rather than forming normal paragraphs, the lines of a code block are interpreted literally. Markdown wraps a code block in both \u0026lt;pre\u0026gt; and \u0026lt;code\u0026gt; tags.\nTo produce a code block in Markdown, simply indent every line of the block by at least 4 spaces or 1 tab.\nThis is a normal paragraph:\nThis is a code block.  Here is an example of AppleScript:\ntell application \u0026quot;Foo\u0026quot; beep end tell  A code block continues until it reaches a line that is not indented (or the end of the article).\nWithin a code block, ampersands (\u0026amp;) and angle brackets (\u0026lt; and \u0026gt;) are automatically converted into HTML entities. This makes it very easy to include example HTML source code using Markdown \u0026ndash; just paste it and indent it, and Markdown will handle the hassle of encoding the ampersands and angle brackets. For example, this:\n\u0026lt;div class=\u0026quot;footer\u0026quot;\u0026gt; \u0026amp;copy; 2004 Foo Corporation \u0026lt;/div\u0026gt;  Regular Markdown syntax is not processed within code blocks. E.g., asterisks are just literal asterisks within a code block. This means it\u0026rsquo;s also easy to use Markdown to write about Markdown\u0026rsquo;s own syntax.\ntell application \u0026quot;Foo\u0026quot; beep end tell Span Elements Links Markdown supports two style of links: inline and reference.\nIn both styles, the link text is delimited by [square brackets].\nTo create an inline link, use a set of regular parentheses immediately after the link text\u0026rsquo;s closing square bracket. Inside the parentheses, put the URL where you want the link to point, along with an optional title for the link, surrounded in quotes. For example:\nThis is an example inline link.\nThis link has no title attribute.\nEmphasis Markdown treats asterisks (*) and underscores (_) as indicators of emphasis. Text wrapped with one * or _ will be wrapped with an HTML \u0026lt;em\u0026gt; tag; double *\u0026rsquo;s or _\u0026rsquo;s will be wrapped with an HTML \u0026lt;strong\u0026gt; tag. E.g., this input:\nsingle asterisks\nsingle underscores\ndouble asterisks\ndouble underscores\nCode To indicate a span of code, wrap it with backtick quotes (`). Unlike a pre-formatted code block, a code span indicates code within a normal paragraph. For example:\nUse the printf() function.\n","permalink":"https://0xv31an5a1i5.xyz/posts/test2/","summary":"Markdown: Syntax  Overview  Philosophy Inline HTML Automatic Escaping for Special Characters   Block Elements  Paragraphs and Line Breaks Headers Blockquotes Lists Code Blocks Horizontal Rules   Span Elements  Links Emphasis Code Images   Miscellaneous  Backslash Escapes Automatic Links    Note: This document is itself written using Markdown; you can see the source for it by adding \u0026lsquo;.text\u0026rsquo; to the URL.","title":"Test2"},{"content":" Advertisement :)\n pica - high quality and fast image resize in browser. babelfish - developer friendly i18n with plurals support and easy syntax.  You will like those projects!\n h1 Heading 8-) h2 Heading h3 Heading h4 Heading h5 Heading h6 Heading Horizontal Rules    Typographic replacements Enable typographer option to see result.\n(c) (C) (r) (R) (tm) (TM) (p) (P) +-\ntest.. test\u0026hellip; test\u0026hellip;.. test?\u0026hellip;.. test!\u0026hellip;.\n!!!!!! ???? ,, \u0026ndash; \u0026mdash;\n\u0026ldquo;Smartypants, double quotes\u0026rdquo; and \u0026lsquo;single quotes\u0026rsquo;\nEmphasis This is bold text\nThis is bold text\nThis is italic text\nThis is italic text\nStrikethrough\nBlockquotes  Blockquotes can also be nested\u0026hellip;\n \u0026hellip;by using additional greater-than signs right next to each other\u0026hellip;\n \u0026hellip;or with spaces between arrows.\n   Lists Unordered\n Create a list by starting a line with +, -, or * Sub-lists are made by indenting 2 spaces:  Marker character change forces new list start:  Ac tristique libero volutpat at   Facilisis in pretium nisl aliquet   Nulla volutpat aliquam velit     Very easy!  Ordered\n  Lorem ipsum dolor sit amet\n  Consectetur adipiscing elit\n  Integer molestie lorem at massa\n  You can use sequential numbers\u0026hellip;\n  \u0026hellip;or keep all the numbers as 1.\n  Start numbering with offset:\nfoo bar  Code Inline code\nIndented code\n// Some comments line 1 of code line 2 of code line 3 of code  Block code \u0026ldquo;fences\u0026rdquo;\nSample text here... Syntax highlighting\nvar foo = function (bar) { return bar++; }; console.log(foo(5)); Tables    Option Description     data path to data files to supply the data that will be passed into templates.   engine engine to be used for processing templates. Handlebars is the default.   ext extension to be used for dest files.    Right aligned columns\n   Option Description     data path to data files to supply the data that will be passed into templates.   engine engine to be used for processing templates. Handlebars is the default.   ext extension to be used for dest files.    Links link text\nlink with title\nAutoconverted link https://github.com/nodeca/pica (enable linkify to see)\nImages Like links, Images also have a footnote style syntax\nWith a reference later in the document defining the URL location:\nPlugins The killer feature of markdown-it is very effective support of syntax plugins.\nEmojies  Classic markup: :wink: :crush: :cry: :tear: :laughing: :yum:\nShortcuts (emoticons): :-) :-( 8-) ;)\n see how to change output with twemoji.\nSubscript / Superscript  19^th^ H~2~O  \u0026lt;ins\u0026gt; ++Inserted text++\n\u0026lt;mark\u0026gt; ==Marked text==\nFootnotes Footnote 1 link1.\nFootnote 2 link2.\nInline footnote^[Text of inline footnote] definition.\nDuplicated footnote reference2.\nDefinition lists  Term 1  Definition 1 with lazy continuation.\n Term 2 with inline markup  Definition 2\n{ some code, part of Definition 2 }  Third paragraph of definition 2.\n  Compact style:\nTerm 1 ~ Definition 1\nTerm 2 ~ Definition 2a ~ Definition 2b\nAbbreviations This is HTML abbreviation example.\nIt converts \u0026ldquo;HTML\u0026rdquo;, but keep intact partial entries like \u0026ldquo;xxxHTMLyyy\u0026rdquo; and so on.\n*[HTML]: Hyper Text Markup Language\nCustom containers ::: warning here be dragons :::\n  Footnote can have markup\nand multiple paragraphs.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n Footnote text.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n   ","permalink":"https://0xv31an5a1i5.xyz/posts/test/","summary":"Advertisement :)\n pica - high quality and fast image resize in browser. babelfish - developer friendly i18n with plurals support and easy syntax.  You will like those projects!\n h1 Heading 8-) h2 Heading h3 Heading h4 Heading h5 Heading h6 Heading Horizontal Rules    Typographic replacements Enable typographer option to see result.\n(c) (C) (r) (R) (tm) (TM) (p) (P) +-\ntest.. test\u0026hellip; test\u0026hellip;.. test?","title":"Test"}]